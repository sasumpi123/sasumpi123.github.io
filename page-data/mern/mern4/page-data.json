{"componentChunkName":"component---src-templates-blog-post-js","path":"/mern/mern4/","result":{"data":{"site":{"siteMetadata":{"title":"MuriMuri's Dev Note","author":"MuriMuri","siteUrl":"https://sasumpi123.github.io","comment":{"disqusShortName":"","utterances":"sasumpi123/sasumpi123.github.io"},"sponsor":{"buyMeACoffeeId":"sasumpi123"}}},"markdownRemark":{"id":"6f45e4b2-c2ae-5d08-af52-8e20a2a311ce","excerpt":"Node.js와 MongoDB 연결하기 이전 포스트에서 우리가 간단하게 만들었던 서버 코드이다 하나씩 살펴보고 지나가자 먼저 라는 변수에 우리가 npm install 한  모듈을 받아오고 에 객체를 담아준다.  에 3001또는 process.enc.PORT 번호를 주입하고 해당 포트번호로 리스닝이 성공할시 console에 “server on! 3001” 메세지를 출력한다 또한 해당 로 접속했을때 웹 페이지에 \n“hello world…","html":"<h2 id=\"nodejs와-mongodb-연결하기\" style=\"position:relative;\"><a href=\"#nodejs%EC%99%80-mongodb-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0\" aria-label=\"nodejs와 mongodb 연결하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node.js와 MongoDB 연결하기</h2>\n<p>이전 포스트에서 우리가 간단하게 만들었던 서버 코드이다<br>\n하나씩 살펴보고 지나가자</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 우리가 npm install 한 express를 가져옴</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                   <span class=\"token comment\">// app에 받아온 모듈 저장</span></span><span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3001</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// port 번호 3001 번으로 설정</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>      <span class=\"token comment\">// 해당 url로 접속했을때 실행할 행동 정의해줌</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>          <span class=\"token comment\">// 해당 port번호로 리스닝이 성공했을때 실행될 콜백함수이다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server on! '</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>먼저 <code class=\"language-text\">express</code>라는 변수에 우리가 npm install 한 <code class=\"language-text\">express</code> 모듈을 받아오고<br>\n<code class=\"language-text\">app</code>에 <code class=\"language-text\">express</code>객체를 담아준다.<br>\n<code class=\"language-text\">port</code> 에 3001또는 process.enc.PORT 번호를 주입하고<br>\n해당 포트번호로 리스닝이 성공할시 console에<br>\n<strong>“server on! 3001”</strong> 메세지를 출력한다<br>\n또한 해당 <code class=\"language-text\">url</code>로 접속했을때 웹 페이지에\n<strong>“hello world!”</strong>를 출력해준다.</p>\n<p>간단하게 서버를 만들었고 이제 서버에 <code class=\"language-text\">MongoDB</code>를 연결해 보자.\n먼저 <code class=\"language-text\">server</code> 폴더 안에 <code class=\"language-text\">db</code> 폴더를 만들고<br>\n<code class=\"language-text\">db</code> 폴더안에 <code class=\"language-text\">index.js</code> 파일을 생성한다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MERN\n└── server\n    ├── db\n    │   └── index.js\n    ├── node_modules\n    │   └── ...\n    ├── index.js\n    ├── package-lock.json\n    └── package.json</code></pre></div>\n<p>이제 위와같은 구조가 완성되었을 것이다.<br>\ndb 폴더의 index.js 파일에 아래 코드를 입력하자.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">// npm install 한 mongoose 을 가져옴</span>\n\n<span class=\"gatsby-highlight-code-line\">mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'useFindAndModify'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// mongoose가 제공하는 함수를 사용하기 위한 set</span></span>mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'useCreateIndex'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// mongoose 필요없는 경고 메세지 제거</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'useUnifiedTopology'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// mongoose 필요없는 경고 메세지 제거</span>\n\nmongoose\n    <span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://127.0.0.1:27017/addr'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useNewUrlParser<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Connection error'</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                                            <span class=\"token comment\">// mongoose 를 사용하여 MongoDB에 </span>\n                                            <span class=\"token comment\">// 연결하고 addr이라는 Collection과 연결</span>\n                                            <span class=\"token comment\">// 에러 발생시 콘솔에 에러 출력</span>\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>connection\n                                            <span class=\"token comment\">// db객체에 MongoDB연결 정보 담가</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> db                         <span class=\"token comment\">// 모듈 생성</span></code></pre></div>\n<p>위 코드에서 눈여겨 봐야할 부분은 <code class=\"language-text\">mongoose.connect</code> 와 <code class=\"language-text\">module.exports</code> 이다.<br>\n<code class=\"language-text\">mongoose.connect</code>에 연결할 <code class=\"language-text\">MongoDB</code> 포트번호와 생성할 DB이름을 입력하면<br>\n<code class=\"language-text\">MongoDB</code>가 켜져있을때 <code class=\"language-text\">mongoose</code>가 알아서 연결해준다.<br>\n또한 <code class=\"language-text\">.catch</code>를 통해 연결 실패했을때 <strong>“Connection error”</strong> 라는 문장을 콘솔에 출력한다.</p>\n<p>이후 선언한 <code class=\"language-text\">db</code>에 <code class=\"language-text\">mongoose.connection</code> 객체를 담고<br>\n해당 객체를 <code class=\"language-text\">db</code>라는 이름으로 모듈화 시킨다.</p>\n<p>이제 다시 <code class=\"language-text\">server</code>폴더에 있는 <code class=\"language-text\">index.js</code>로 돌아오자.<br>\nindex.js에 아래 코드들을 추가한다.   </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./db'</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 생성한 모듈 가져오기(MongoDB 연결)</span>\n<span class=\"token comment\">// MongoDB 연결</span>\n<span class=\"gatsby-highlight-code-line\">db<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>           </span>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB Connected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DB 연결중 에러가 있으면 \"DB ERROR :\" 와 에러를 출력</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB ERROR : '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>db 객체에 우리가 이전에 만들었던 모듈을 담아주고,<br>\n<code class=\"language-text\">db.once</code>를 이용해 <code class=\"language-text\">MongoDB</code>와 연결해준다. 연결 성공했을때<br>\n<strong>“DB Connected”</strong>메세지를 콘솔에 출력한다.<br>\n연결에 실패했을때 <strong>“DB ERROR + 에러메세지”</strong>를 출력해준다.\n<code class=\"language-text\">index.js</code>파일 수정후 자신이 <code class=\"language-text\">nodemon</code>을 사용해 서버를 켜둔 상태라면<br>\n자동으로 서버가 리로드되면서 콘솔창에<br>\n<strong>“DB Connected”</strong> or <strong>“DB ERROR”</strong> 메세지를 확인 할 수 있을것이다.</p>\n<p>아래코드는 현재 server 폴더안의 index.js 파일 전체코드이다.   </p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">// 우리가 npm install 한 express를 가져옴</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                   <span class=\"token comment\">// app에 받아온 모듈 저장</span></span><span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3001</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// port 번호 3001 번으로 설정</span>\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./db'</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// 생성한 모듈 가져오기(MongoDB 연결)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>      <span class=\"token comment\">// 해당 url로 접속했을때 실행할 행동 정의해줌</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// MongoDB 연결</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>           \n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB Connected'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// DB 연결중 에러가 있으면 \"DB ERROR :\" 와 에러를 출력</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'DB ERROR : '</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>          <span class=\"token comment\">// 해당 port번호로 리스닝이 성공했을때 실행될 콜백함수이다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server on! '</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>여기까지 문제없이 성공했다면 우리는 서버를 생성하고 서버와 <code class=\"language-text\">MongoDB</code>와 연결을 마친것이다!</p>","frontmatter":{"title":"MERN 스택(Express.js, MongDB 연결)","date":"April 22, 2020","thumbnail":null}}},"pageContext":{"slug":"/mern/mern4/","previous":{"fields":{"slug":"/mern/mern3/"},"frontmatter":{"title":"MERN 스택(Node 설치 및 필요 모듈 install)","category":"mern","draft":false}},"next":{"fields":{"slug":"/mern/mern5/"},"frontmatter":{"title":"MERN 스택(Model 생성)","category":"mern","draft":false}}}}}